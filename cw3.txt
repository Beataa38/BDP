--zadanie 4
--liczba budynków
Select count(popp.f_codedesc) from popp, majrivers where (popp.f_codedesc = 'Building') 
	and St_distance(majrivers.geom, popp.geom) < 1000
--zapisanie do tabeli
Select popp.f_codedesc, popp.f_code, popp.type, popp.geom into tableB from popp, majrivers where popp.f_codedesc = 'Building'
	and St_distance(majrivers.geom, popp.geom) < 1000
--podgląd tabeli
Select * from tableB

--zadanie 5
--dodanie poszczególnych kolumn do nowej tabeli
Select name, geom, elev into airportsNew from airports;
--wyświetlenie tabeli
Select * from airportsNew;
--a
--zachod
Select name from airportsNew where (Select min(st_x(geom)) from airportsNew )=st_x(geom);
--wschod
Select name from airportsNew where (Select max(st_x(geom)) from airportsNew )=st_x(geom);
--b
--x dla punktu
Select avg(st_x(geom)) from airportsNew where (Select max(st_x(geom)) from airportsNew )=st_x(geom) or (Select min(st_x(geom)) from airportsNew )=st_x(geom);
--y dla punktu
Select avg(st_y(geom)) from airportsNew where (Select max(st_y(geom)) from airportsNew )=st_y(geom) or (Select min(st_y(geom)) from airportsNew )=st_y(geom);
--dodanie rekordu do tabeli
insert into airportsNew values('airportB', (Select st_point(avg(st_x(geom)), avg(st_y(geom))) from airportsNew 
	where ((Select max(st_x(geom)) from airportsNew )=st_x(geom) or (Select min(st_x(geom)) from airportsNew )=st_x(geom)) or 
		((Select max(st_y(geom)) from airportsNew )=st_y(geom) or (Select min(st_y(geom)) from airportsNew )=st_y(geom))) , 125);
--sprawdzenie dodanego rekordu	
Select * from airportsNew;

--zadanie 6
--wybranie jeziora
Select *, st_astext(geom) from lakes where names='Iliamna Lake';
--wybranie lotniska
Select *, st_astext(geom) from airports where name='AMBLER';
--najkrótsza linia
Select st_astext(St_ShortestLine(lakes.geom, airports.geom)) from lakes, airports where (names='Iliamna Lake') and ( name='AMBLER');
--powierzchnia
Select st_area(st_buffer(St_ShortestLine(lakes.geom, airports.geom), 1000)) from lakes, airports where (names='Iliamna Lake') and ( name='AMBLER');

--zadanie 7
Select * from tundra
Select * from trees
--drzewa na bagnach
Select st_astext(St_intersection(swamp.geom, trees.geom)) from swamp, trees where st_Isempty(St_intersection(swamp.geom, trees.geom)) = 'f'
--drzewa na tundrze
Select st_astext(St_intersection(tundra.geom, trees.geom)) from tundra, trees where st_Isempty(St_intersection(tundra.geom, trees.geom)) = 'f'
--powierzchnia powyższych części wspólnych
Select st_area(St_intersection(swamp.geom, trees.geom)), st_area(St_intersection(tundra.geom, trees.geom)) from swamp, trees, tundra 
	where (st_Isempty(St_intersection(swamp.geom, trees.geom)) = 'f') and (st_Isempty(St_intersection(tundra.geom, trees.geom)) = 'f')
--suma po typach drzew
Select sum(st_area(St_intersection(swamp.geom, trees.geom)) + st_area(St_intersection(tundra.geom, trees.geom))) from swamp, trees, tundra 
	where (st_Isempty(St_intersection(swamp.geom, trees.geom)) = 'f') and (st_Isempty(St_intersection(tundra.geom, trees.geom)) = 'f') group by trees.vegdesc;
